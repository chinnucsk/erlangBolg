<erl>


box(Str) ->
    {'div',[{class,"box"}],
     {pre,[], yaws_api:htmlize(Str)}}.

fpostvar(A, Key) ->
    case postvar(A,"lang") of
        undefined -> "None";
        {ok, Val} ->
            Val
    end.

getval(A,Key) ->
    case postvar(A,Key) of
        undefined -> "None";
        {ok, Val} -> Val
    end.




out(A) ->
     [{ssi, "HEAD", "%%",[{"contact", "current-menu-item"}]},
     {ehtml,
      {'div',[{id, "entry"}], [{h2, [],"post.yaws"},


       box(io_lib:format('~p', [yaws_api:parse_post(A)])),


        {p,[], "Produces the following output:"},
        {hr,[],[]},
        {'div',[{class,"box"}],
          {p,[], ["The favourite programming language is ",getval(A,"subject")]}}
         ]}
      }, 
      {ssi, "FOOT",[],[]}].


</erl>
<erl>
getval(A,Key) ->
    case postvar(A,Key) of
        undefined -> "None";
        {ok, Val} -> Val
    end.

out(A)->
    mysql:start_link(conn, "127.0.0.1", 3306, "root", "123456", "dream"),
    Val1 = getval(A,"name"),
    Val2 = getval(A,"email"),
    Result = mysql:fetch(conn,  "INSERT INTO auth_group(id, name) VALUES ('', '" ++ Val1 ++ "'),('', '" ++ Val2 ++ "')" ),
  %  Result = mysql:fetch(conn, <<"SELECT * FROM auth_group">>),
    io:format("Result: ~p~n", [A]).
</erl>
